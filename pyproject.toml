[project]
name = "updates2mqtt"
readme = "README.md"
description = "System update and docker image notification and execution over MQTT"
authors = [
    { name = "jey burrows", email = "jrb@jeymail.net" }
]

requires-python = ">=3.13"
version = "1.1.1"
license="Apache-2.0"
keywords=["mqtt", "docker", "updates", "automation","home-assistant"]
packages = [
  { include = "src" },
]
dependencies = [
  "docker>=7.1.0",
  "paho-mqtt>=2.0.0",
  "omegaconf>=2.3.0",
  "structlog>=25.4.0",
  "rich>=14.0.0",
  "httpx>=0.28.1",
  "cachetools>=6.2.0",
]
classifiers = [
    "Development Status :: 4 - Beta",
    "License :: Other/Proprietary License",
    "Natural Language :: English",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3.13"
]

[project.scripts]
updates2mqtt = "updates2mqtt.__main__:run"

[tool.uv]
compile-bytecode = true
managed = true

[dependency-groups]
dev = [
    "ruff>=0.3.7",
    "pre-commit>=3.7.0",
    "pytest>=7.4.4",
    "pytest-mock>=3.12.0",
    "pytest-asyncio>=0.21.1",
    "pytest-cov>=5.0.0",
    "pytest-httpx",
    "pytest-mqtt>=0.4.0",
    "pytest-subprocess>=1.5.0",
    "coverage",
    "taskipy>=1.13.0",
    {include-group = "mkdocs"},
]
mkdocs=[
    "mkdocs-material",
    "mkdocstrings",
    "mkdocstrings[python]>=0.18",
    "pymdown-extensions",
]

[tool.taskipy.tasks]
pyright_lint = "pyright ."
ruff_format = "ruff format ."
ruff_lint = "ruff check ."
ruff_fix = "ruff check --fix ."
test = "pytest tests -n auto --cov=app --cov-report=term --cov-report=xml"
format = "task ruff_fix && task ruff_format"
lint = "task ruff_lint && task pyright_lint"
check = "task format && task lint && task test"

[build-system]
build-backend = "hatchling.build"
requires=[
  "hatchling"
]

[tool.ruff]
line-length = 128
indent-width = 4
target-version = "py312"
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "htmlcov",
    ".mypy_cache",
    ".pytest_cache",
    ".github",
    "node_modules",
    "site-packages",
    "venv",
]

[tool.ruff.lint]
preview = false
select = ["E", "C","R", "F", "B", "W", "I", "C90", "N", "D", "UP", "YTT", 
"RUF","PGH","PT","T20","DTZ","TD","PTH","ARG","INT","TCH","TID","SIM","PERF","ASYNC","ANN","S","A","COM","C4"]
ignore = [
    "W191","E111","E114","E117","D206","D300","Q000","Q001","COM812","COM819","ISC001","ISC002", # std formatter conflicts
    "D203","D213", # other formatter clashes
    "TD002","TD003","TD005",
    "D103","D100","D101","D102","D104","D107","D415","D400","D415","ANN401",
    "S101","C901","FURB113",
    "S602","S607","S404" ] # subprocess usage
unfixable = ["B"]


[tool.ruff.format]
preview = true

[tool.pytest.ini_options]
asyncio_mode = "auto"
testpaths = [
    "tests",
]
norecursedirs = [
    ".git",
    "templates",
]
pythonpath = [
  "."
]
addopts = "--cov --cov-report=lcov:lcov.info --cov-report=term --import-mode=importlib"

[tool.coverage.run]
branch = true
source = ["src"]

[tool.coverage.report]
fail_under=0

[tool.coverage.xml]
output="cov.xml"

[tool.coverage.html]
directory="htmlcov"

[tool.mypy]
mypy_path=["./src","./tests"]

[project.urls]
Repository="https://github.com/rhizomatics/updates2mqtt"
Documentation="https://rhizomatics.github.io/updates2mqtt/"
